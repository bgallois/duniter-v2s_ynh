#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=1

addgroup --system "duniter"
adduser --system --home "/home/duniter" --disabled-password --ingroup "duniter" "duniter"

#FIXME adduser not creating home dir
if [ ! -d "/home/duniter/" ]; then
    mkdir /home/duniter
    chown -R duniter:duniter /home/duniter
    chmod 700 /home/duniter
fi

#=================================================
# INSTALL RUST/CARGO
#=================================================
ynh_script_progression --message="Installing Rust and Cargo..." --weight=1

# Install rustup with the toolchain needed by Gemserv
pushd "$install_dir"
    ynh_exec_warn_less ynh_exec_as "$app" \
        RUSTUP_HOME="$install_dir/.rustup" \
        CARGO_HOME="$install_dir/.cargo" \
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
    | ynh_exec_as "$app" sh -s -- -q -y
popd

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir/build"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app:$app" "$install_dir"

#=================================================
# SPECIFIC SETUP
#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..." --weight=1

# Compile duniter
pushd "$install_dir/build"
    ynh_exec_warn_less ynh_exec_as "$app" bash -c "source $install_dir/.cargo/env; cargo build -Zgit=shallow-deps --release -p duniter"
popd

# Install
cp -af "$install_dir/build/target/release/duniter" "/usr/bin/duniter"
chown root:root "/usr/bin/duniter"
chmod 755 "/usr/bin/duniter"
mkdir "/etc/duniter/"
cp -af "$install_dir/build/resources/debian/env_file" "/etc/duniter/env_file"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated systemd config
if [ $smith = "mirror" ]; then
    ynh_add_systemd_config --service="duniter-mirror" --template="$install_dir/build/resources/debian/duniter-mirror.service"
else
    ynh_add_systemd_config --service="duniter-smith" --template="$install_dir/build/resources/debian/duniter-smith.service"
    ynh_add_systemd_config --service="distance-oracle" --template="$install_dir/build/resources/debian/distance-oracle.service"
    cp "$install_dir/build/resources/debian/distance-oracle.timer" "/etc/systemd/system/"
fi
export $(grep -v '^#' /etc/duniter/env_file | xargs -d '\n')
su -c "duniter key generate-node-key --base-path ${BASE_PATH} --chain ${DUNITER_CHAIN_NAME}" duniter

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

# Remove build files and rustup
ynh_secure_remove --file="$install_dir/build"
ynh_secure_remove --file="$install_dir/.cargo"
ynh_secure_remove --file="$install_dir/.rustup"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

if [ $smith = "mirror" ]; then
    ynh_systemd_action --service_name="duniter-mirror" --action="start" --line_match="Started" --log_path="systemd"
else
    ynh_systemd_action --service_name="duniter-smith" --action="start" --line_match="Started" --log_path="systemd"
    ynh_systemd_action --service_name="distance-oracle.timer" --action="start" --line_match="Started" --log_path="systemd"
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
